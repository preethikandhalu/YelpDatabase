/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Preethi
 */
import java.awt.BorderLayout;
import java.awt.Container;
import java.sql.*;
import java.util.Vector;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class hw3 extends javax.swing.JFrame {
    String[] Categories =  new String[] {"Active Life","Arts & Entertainment","Automotive","Car Rental","Cafes","Beauty & Spas","Convenience Stores","Dentists","Doctors","Drugstores","Department Stores","Education","Event Planning & Services","Flowers & Gifts","Food","Health & Medical","Home Services","Home & Garden","Hospitals","Hotels & Travel","Hardware Stores","Grocery","Medical Centers","Nurseries & Gardening","Nightlife","Restaurants","Shopping","Transportation"};
    private static javax.swing.JCheckBox jCheckBoxBusCategory[] ;  //= new javax.swing.JCheckBox[]() ;
    private static javax.swing.JCheckBox jCheckBoxSubCategory[];
    private static String[] busCatSelected;
    private static String[] subCatSelected;
    public hw3() {
       // this.jCheckBoxBusCategory[] = new javax.swing.JCheckBox[]();//{chkActiveLife, chkArtsAndEntertainment, chkAutomotive, chkBeautyAndSpas, chkCafes, chkCarRental, chkConvenienceStores, chkDentists, chkDepartmentStores, chkDoctors, chkDrugstores, chkEducation, chkEventPlanningAndServices, chkFlowersAndGifts, chkFood, chkGrocery, chkHardwareStores, chkHealthAndMedical, chkHomeAndGarden, chkHomeServices, chkHospitals, chkHotelsAndTravel, chkMedicalCenters, chkNightlife, chkNurseriesAndGardening, chkRestaurants, chkShopping, chkTransportation};
      //  jCheckBoxBusCategory[0]=chkActiveLife;
        initComponents();
        //this.jCheckBoxBusCategory.
        populateBusCategory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        UserOrBusiness = new javax.swing.ButtonGroup();
        jCheckBox13 = new javax.swing.JCheckBox();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Business = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        Users = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtMemberSinceMonth = new javax.swing.JTextField();
        txtMemberSinceYear = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        label = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtReviewCountValue = new javax.swing.JTextField();
        txtNumOfFriendsValue = new javax.swing.JTextField();
        txtAvgStarsValue = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        CheckIn = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox();
        txtFromHour = new javax.swing.JTextField();
        txtToHour = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jComboBox7 = new javax.swing.JComboBox();
        txtNumOfCheckins = new javax.swing.JTextField();
        Review = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        txtReviewFromMonth = new javax.swing.JTextField();
        txtReviewFromDay = new javax.swing.JTextField();
        txtReviewFromYear = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtReviewToMonth = new javax.swing.JTextField();
        txtReviewToDay = new javax.swing.JTextField();
        txtReviewToYear = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jComboBox8 = new javax.swing.JComboBox();
        txtReviewStar = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jComboBox9 = new javax.swing.JComboBox();
        jTextField1 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        QueryExecuted = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        QueryGoesHere = new javax.swing.JTextArea();
        btnExecute = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        radiobtnUser = new javax.swing.JRadioButton();
        radiobtnBusiness = new javax.swing.JRadioButton();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        ResultTable = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        jBtnCategory = new javax.swing.JToggleButton();

        jCheckBox13.setText("jCheckBox13");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        Business.setBackground(new java.awt.Color(255, 102, 0));
        Business.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Business", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jPanel8.setBackground(new java.awt.Color(255, 153, 0));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Categories"));
        jPanel8.setLayout(new java.awt.GridLayout(0, 1));
        jScrollPane1.setViewportView(jPanel8);

        jPanel1.setBackground(new java.awt.Color(255, 153, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Subcategories"));
        jPanel1.setLayout(new java.awt.GridLayout(0, 1));
        jScrollPane2.setViewportView(jPanel1);

        javax.swing.GroupLayout BusinessLayout = new javax.swing.GroupLayout(Business);
        Business.setLayout(BusinessLayout);
        BusinessLayout.setHorizontalGroup(
            BusinessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BusinessLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        BusinessLayout.setVerticalGroup(
            BusinessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        Users.setBackground(new java.awt.Color(235, 235, 8));
        Users.setBorder(javax.swing.BorderFactory.createTitledBorder("Users"));

        jLabel1.setText("Member since");

        jLabel2.setText("Review Count");

        jLabel3.setText("Num. of friends");

        jLabel4.setText("Avg. Stars");

        txtMemberSinceMonth.setText("MM");

        txtMemberSinceYear.setText("YYYY");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "=,>,<", "=", ">", "<" }));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "=,>,<", "=", ">", "<" }));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "=,>,<", "=", ">", "<" }));

        label.setText("value:");

        jLabel6.setText("value:");

        jLabel7.setText("value:");

        jLabel8.setText("Selection:");

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AND, OR between attributes", "AND", "OR" }));

        javax.swing.GroupLayout UsersLayout = new javax.swing.GroupLayout(Users);
        Users.setLayout(UsersLayout);
        UsersLayout.setHorizontalGroup(
            UsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UsersLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(UsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UsersLayout.createSequentialGroup()
                        .addGroup(UsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(UsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(UsersLayout.createSequentialGroup()
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7))
                            .addGroup(UsersLayout.createSequentialGroup()
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6))
                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 77, Short.MAX_VALUE))
                    .addGroup(UsersLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(26, 26, 26)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(label)
                        .addGap(18, 18, 18)
                        .addGroup(UsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtAvgStarsValue)
                            .addComponent(txtReviewCountValue)
                            .addComponent(txtNumOfFriendsValue)))
                    .addGroup(UsersLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMemberSinceMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtMemberSinceYear, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(121, 121, 121)))
                .addContainerGap())
        );
        UsersLayout.setVerticalGroup(
            UsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UsersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(UsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(UsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtMemberSinceMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtMemberSinceYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(UsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label)
                    .addComponent(txtReviewCountValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(UsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtNumOfFriendsValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(UsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtAvgStarsValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(UsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        CheckIn.setBackground(new java.awt.Color(255, 102, 0));
        CheckIn.setBorder(javax.swing.BorderFactory.createTitledBorder("CheckIn"));

        jLabel5.setText("From");

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No Selection", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" }));

        jLabel10.setText("To");

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No Selection", "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" }));

        txtFromHour.setText("hour");

        txtToHour.setText("hour");

        jLabel11.setText("Num. of Checkins");

        jLabel12.setText("Date and Time Interval");

        jComboBox7.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "=,>,<", "=", ">", "<" }));

        javax.swing.GroupLayout CheckInLayout = new javax.swing.GroupLayout(CheckIn);
        CheckIn.setLayout(CheckInLayout);
        CheckInLayout.setHorizontalGroup(
            CheckInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CheckInLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jLabel11)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CheckInLayout.createSequentialGroup()
                .addGroup(CheckInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(CheckInLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNumOfCheckins))
                    .addGroup(CheckInLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(CheckInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(CheckInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel12)
                            .addGroup(CheckInLayout.createSequentialGroup()
                                .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(txtFromHour, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(CheckInLayout.createSequentialGroup()
                                .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(txtToHour)))))
                .addGap(18, 18, 18))
        );
        CheckInLayout.setVerticalGroup(
            CheckInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CheckInLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addGap(28, 28, 28)
                .addGroup(CheckInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFromHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(CheckInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtToHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(53, 53, 53)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addGroup(CheckInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumOfCheckins, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(97, Short.MAX_VALUE))
        );

        Review.setBackground(new java.awt.Color(255, 102, 0));
        Review.setBorder(javax.swing.BorderFactory.createTitledBorder("Review"));

        jLabel13.setText("From");

        txtReviewFromMonth.setText("MM");

        txtReviewFromDay.setText("DD");

        txtReviewFromYear.setText("YYYY");

        jLabel14.setText("To");

        txtReviewToMonth.setText("MM");

        txtReviewToDay.setText("DD");

        txtReviewToYear.setText("YYYY");

        jLabel15.setText("Written between");

        jLabel16.setText("Stars");

        jComboBox8.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "=,>,<", "=", ">", "<" }));

        jLabel17.setText("Votes");

        jComboBox9.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "=,>,<", "=", ">", "<" }));

        jLabel18.setText("value");

        jLabel19.setText("value");

        javax.swing.GroupLayout ReviewLayout = new javax.swing.GroupLayout(Review);
        Review.setLayout(ReviewLayout);
        ReviewLayout.setHorizontalGroup(
            ReviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReviewLayout.createSequentialGroup()
                .addGroup(ReviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ReviewLayout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(jLabel16))
                    .addGroup(ReviewLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(ReviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(jLabel18))
                        .addGap(18, 18, 18)
                        .addGroup(ReviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ReviewLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel17))
                            .addGroup(ReviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jComboBox8, javax.swing.GroupLayout.Alignment.LEADING, 0, 75, Short.MAX_VALUE)
                                .addComponent(txtReviewStar, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGroup(ReviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jComboBox9, javax.swing.GroupLayout.Alignment.LEADING, 0, 75, Short.MAX_VALUE)
                                .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGroup(ReviewLayout.createSequentialGroup()
                                .addGroup(ReviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtReviewToMonth)
                                    .addComponent(txtReviewFromMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(ReviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtReviewToDay)
                                    .addComponent(txtReviewFromDay, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(ReviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtReviewFromYear)
                                    .addComponent(txtReviewToYear, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReviewLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addGap(96, 96, 96))
        );
        ReviewLayout.setVerticalGroup(
            ReviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReviewLayout.createSequentialGroup()
                .addComponent(jLabel15)
                .addGap(31, 31, 31)
                .addGroup(ReviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtReviewFromMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReviewFromDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReviewFromYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ReviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addGroup(ReviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtReviewToMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtReviewToDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtReviewToYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addComponent(jComboBox8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(ReviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtReviewStar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGap(20, 20, 20)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(ReviewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        QueryExecuted.setBorder(javax.swing.BorderFactory.createTitledBorder("Query Executed"));

        QueryGoesHere.setColumns(20);
        QueryGoesHere.setRows(5);
        jScrollPane3.setViewportView(QueryGoesHere);

        javax.swing.GroupLayout QueryExecutedLayout = new javax.swing.GroupLayout(QueryExecuted);
        QueryExecuted.setLayout(QueryExecutedLayout);
        QueryExecutedLayout.setHorizontalGroup(
            QueryExecutedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        QueryExecutedLayout.setVerticalGroup(
            QueryExecutedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
        );

        btnExecute.setText("GET ME RESULTS!");
        btnExecute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecuteActionPerformed(evt);
            }
        });

        jLabel9.setText("Querying for");

        UserOrBusiness.add(radiobtnUser);
        radiobtnUser.setText("User");

        UserOrBusiness.add(radiobtnBusiness);
        radiobtnBusiness.setText("Business");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel20.setText("Yelp Database Query-er!");

        ResultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ResultTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ResultTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(ResultTable);

        jScrollPane6.setViewportView(jScrollPane4);

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel21.setText("RESULT TABLE");

        jBtnCategory.setText("Get Subcategories");
        jBtnCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCategoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Users, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Business, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(jBtnCategory)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(CheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(Review, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(QueryExecuted, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(jLabel9)
                                        .addGap(18, 18, 18)
                                        .addComponent(radiobtnUser)
                                        .addGap(18, 18, 18)
                                        .addComponent(radiobtnBusiness)
                                        .addGap(52, 52, 52)
                                        .addComponent(btnExecute)))
                                .addGap(36, 36, 36)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel20)))
                        .addGap(60, 60, 60))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel21)
                        .addGap(176, 176, 176))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addGap(33, 33, 33))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jBtnCategory)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Business, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Users, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel21)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Review, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(QueryExecuted, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(radiobtnUser)
                                    .addComponent(radiobtnBusiness)
                                    .addComponent(btnExecute))
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane6)
                                .addGap(24, 24, 24))))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static Connection con;
    
    private void populateBusCategory(){
       // populate populate = new populate();
        int num =  28;//populate.getBusCategories().length;
       // jScrollPaneBusCategory.add(jPanelBusCategory);
        jCheckBoxBusCategory = new JCheckBox[num];
        for(int i=0;i<jCheckBoxBusCategory.length;i++){
           jCheckBoxBusCategory[i] = new JCheckBox(Categories[i]);
           jPanel8.add(jCheckBoxBusCategory[i]);
           //jScrollPaneBusCategory.setViewportView(jPanelBusCategory);
           //jCheckBoxBusCategory[i].setBounds(20,20*(i+1),100*(i+1),50 );
           
           //jCheckBoxBusCategory[i].addItemListener(null);
        }  
        pack();
    }
       
    private void btnExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExecuteActionPerformed
        Connection con = null;
        ResultSet result = null;
        try {
            con = openConnection();
            //IF NO RADIO BUTTON IS SELECTED
            if(!radiobtnBusiness.isSelected() && !radiobtnUser.isSelected()){
                //JOptionPane.showMessageDialog(new JFrame(), "Please choose if you want to query for users or businesses!");
                QueryGoesHere.setText("Please choose if you want to query for users or businesses!");
            }
            
            //TO QUERY USERS
            if(radiobtnUser.isSelected()){
                if(jComboBox4.getSelectedIndex()==0){
                    QueryGoesHere.setText("Please choose among the different value in Selection!");
                }
                else{
                    if(jComboBox4.getSelectedIndex()==1){
                        result = searchAllUsers(con);
                    }
                    if(jComboBox4.getSelectedIndex()==2){
                        result = searchAnyUsers(con);
                    }
                }
            }
            
            //TO QUERY BUSINESSES
            if(radiobtnBusiness.isSelected()){
                //String categories="'Automotive','Active Life', 'Restaurants'";
                String categories="'" + busCatSelected[0]+ "'";
                for(int i=1;i<busCatSelected.length;i++){
                    if(busCatSelected[i]!=null){
                        categories+=",'"+busCatSelected[i]+"'";
                    }
                }
                
                //String subcategories="'Hotels','Yoga','Barbeque','Fashion','Tires','bleh'";
                //moving from jCheckBoxSubCategory to string array
                //subCatSelected = new String[500];
                for(int i=1;i<subCatSelected.length;i++){
                    if(jCheckBoxSubCategory[i].isSelected()){
                        subCatSelected[i] = jCheckBoxSubCategory[i].getText();
                        //count++;
                    }
                }
                
                //build string from string array
                String subcategories="'"+subCatSelected[0]+"'";
                for(int i=1;i<subCatSelected.length;i++){
                    if(subCatSelected[i]!=null){
                        subcategories+=",'"+subCatSelected[i]+"'";
                    }
                }
                subcategories=subcategories+",'bleh'";

                result= searchBusiness(con,categories,subcategories);
            }
            
            //BUILD TABLE AND DISPLAY RESULTS
            ResultTable.setModel(buildTableModel(result));
        } catch (SQLException e) {
            System.err.println("Errors occurs when communicating with the database server: " + e.getMessage());
        } catch (ClassNotFoundException e) {
            System.err.println("Cannot find the database driver");
        } finally {
            closeConnection(con);
        }
    }//GEN-LAST:event_btnExecuteActionPerformed

    private void jBtnCategoryActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // jButtoCatToSubCatActionPerformed
                                                          
	busCatSelected = new String[28];
//	boolean isChcked = false;
	int count = 0;
	for(int i=0;i<jCheckBoxBusCategory.length;i++){
		if(jCheckBoxBusCategory[i].isSelected()){
			busCatSelected[count] = jCheckBoxBusCategory[i].getText();
			count++;
		}
                
	}
	populateSubCategory(busCatSelected);
	//JOptionPane.showMessageDialog(new JFrame(),count);
    }                                            
    
    private void populateSubCategory(String[] busCatSelected){
        String[] tempBusCatSelected = busCatSelected;
        //subCatSelected = new String[500];
        String createSubCatQuery = "SELECT DISTINCT SUBCATEGORIES FROM BUSINESS_CATEGORIES WHERE";
        for(int i=0;i<tempBusCatSelected.length;i++){
            if(tempBusCatSelected[i]!=null)
            createSubCatQuery += " CATEGORIES = '"+tempBusCatSelected[i]+"' OR";   
        }
        createSubCatQuery = createSubCatQuery.substring(0,createSubCatQuery.length()-2);
        createSubCatQuery=createSubCatQuery+ "ORDER BY SUBCATEGORIES";
        //dbConnect = new Connecting_DB();
		Connection con=null;	
		  try {
                //Connection con = dbConnect.openConnection();
                 con=openConnection();
				 Statement st = con.createStatement();
                // pst.setString(1, user_id);
                 ResultSet rs = st.executeQuery(createSubCatQuery);
                 ResultSetMetaData metaData = rs.getMetaData();
                 int count=1;
                 //jPanelSubCategory.removeAll();
                 jPanel1.removeAll();
                 //jCheckBoxSubCategory = new JCheckBox[500];
                 jCheckBoxSubCategory = new javax.swing.JCheckBox[500];
                 
                 
                 while(rs.next()){
                    //jCheckBoxSubCategory[count] = new JCheckBox(rs.getString(1));
                    jCheckBoxSubCategory[count] = new javax.swing.JCheckBox(rs.getString(1)); 
                    //jPanelSubCategory.add(jCheckBoxSubCategory[count]);
                    //jPanel1.add(jCheckBoxSubCategory[count]);
                    //jScrollPaneBusCategory.setViewportView(jPanelBusCategory);
                    jCheckBoxSubCategory[count].setBounds(20,20*count,100*count,500 );
                    //jCheckBoxSubCategory[count].setVisible(true);
                    jPanel1.add(jCheckBoxSubCategory[count]);
                    
                    count++;
                 }
                 subCatSelected=new String[count-1];
                 pack();
                 rs.close();
                 st.close();
            //dbConnect.closeConnection(con);
            closeConnection(con);
			}catch (SQLException ex) {
                System.err.println("Errors occurs when communicating with the database server: " + ex.getMessage());
				//Logger.getLogger(YELP_GUI.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                System.err.println("Cannot find the database driver");
				//Logger.getLogger(YELP_GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        //JOptionPane.showMessageDialog(new JFrame(),createSubCatQuery);
    }
    
    private void ResultTableMouseClicked(java.awt.event.MouseEvent evt) {
        int row = ResultTable.getSelectedRow();
        int column = ResultTable.getColumnCount();
        JFrame reviewFrame = new JFrame("Reviews");
        JPanel reviewPanel = new JPanel();
        JScrollPane reviewPcrollPane ;
        JTable reviewTable= new JTable();
        String USER_ID = null;
        String BUSINESS_ID=null;
    
        if(radiobtnUser.isSelected()){
            for(int i=0;i<column;i++){
                String temp = ResultTable.getColumnName(i);
                if(ResultTable.getColumnName(i).equalsIgnoreCase("USER_ID")){
                    USER_ID = (String) ResultTable.getValueAt(row,i);
                }
            
                continue;
            }
        }
    
        if(radiobtnBusiness.isSelected()){
            for(int i=0;i<column;i++){
                String temp = ResultTable.getColumnName(i);
                if(ResultTable.getColumnName(i).equalsIgnoreCase("BUSINESS_ID")){
                    BUSINESS_ID = (String) ResultTable.getValueAt(row,i);
                }
                continue;
            }
        }
    
        Connection con=null;
        ResultSet rs=null;
        PreparedStatement pst=null;
        try {
            con=openConnection();
            if(radiobtnUser.isSelected()){
                pst = con.prepareStatement("SELECT BUSINESS_NAME AS BUSINESSNAME,R.REVIEW_DATE, R.TEXT FROM BUSINESS B, REVIEW R WHERE B.BUSINESS_ID=R.BUSINESS_ID AND R.USER_ID =?");
                pst.setString(1, USER_ID);
                rs = pst.executeQuery();
            }
        
            if(radiobtnBusiness.isSelected()){
                pst = con.prepareStatement("SELECT Y.FIRSTNAME AS NAME, R.REVIEW_DATE, R.TEXT FROM YELPUSER Y, REVIEW R WHERE Y.USER_ID=R.USER_ID AND R.BUSINESS_ID =?");
                pst.setString(1, BUSINESS_ID);
                rs = pst.executeQuery();
            }
        
            ResultSetMetaData metaData = rs.getMetaData();
        
            //EXTRAPOLATE FROM METADATA
            DefaultTableModel displayDataTable = new DefaultTableModel();
        
            int columns = metaData.getColumnCount();
            String[]columnNames = new String[columns];
            for(int i=1;i<=columns;i++){
                columnNames[i-1]= metaData.getColumnName(i);
            }
        
            displayDataTable.setColumnIdentifiers(columnNames);

            //populate with reviews
            while(rs.next()){
                String[] rowData = new String[columns];
                for(int i=1;i<=columns;i++){
                    rowData[i-1] = rs.getString(i);
                }
                displayDataTable.addRow(rowData);
            }
        
            rs.close();
            pst.close();
            closeConnection(con);

            //SETTING THE REVIEWTABLE
            if(column==0)
                JOptionPane.showMessageDialog(reviewFrame, "No Reviews ");
           else{
                reviewFrame.setSize(1300, 200);
                reviewFrame.setLocationRelativeTo(null);
                reviewPanel.setLayout(new BorderLayout());
                reviewFrame.getContentPane().add(reviewPanel);
            
                reviewTable.setModel(displayDataTable);
                reviewTable.getColumnModel().getColumn(0).setPreferredWidth(100);
                reviewTable.getColumnModel().getColumn(1).setPreferredWidth(3);
                reviewTable.getColumnModel().getColumn(2).setPreferredWidth(1000);
                
                reviewPcrollPane = new JScrollPane(reviewTable);
                reviewPcrollPane.setVisible(true);
                reviewPanel.add(reviewPcrollPane,BorderLayout.CENTER);
                      
                reviewFrame.setVisible(true);
            
                reviewTable.setVisible(true);
                reviewTable.setFillsViewportHeight(true);
            }
    
        } catch (SQLException e) {
            System.err.println("Errors occurs when communicating with the database server: " + e.getMessage());
        } catch (ClassNotFoundException ex) {
            System.err.println("Cannot find the database driver");
        }
    }                                        

    private ResultSet searchAllUsers(Connection con) throws SQLException {
        //int rev_count=Integer.parseInt(txtReviewCountValue.getText());
        int rev_count;
        if(txtReviewCountValue.getText()==null){ rev_count=0; }
        else {rev_count=Integer.parseInt(txtReviewCountValue.getText());}
        
        
        String rev_count_value=jComboBox1.getSelectedItem().toString();
        int num_friends=Integer.parseInt(txtNumOfFriendsValue.getText());
        String num_friends_value=jComboBox2.getSelectedItem().toString();
        int avg_stars=Integer.parseInt(txtAvgStarsValue.getText());
        String avg_stars_value=jComboBox3.getSelectedItem().toString();
        
        String month=txtMemberSinceMonth.getText();
        String year=txtMemberSinceYear.getText();
        
        String date=year+"-"+month;
        
        Statement stmt = con.createStatement();
        String query = "SELECT FIRSTNAME AS NAME, Y.USER_ID, YELPING_SINCE , REVIEW_COUNT, FANS, AVERAGE_STARS, NUMBER_OF_FRIENDS FROM YELPUSER Y, YELP_USER_FRIENDS F WHERE Y.USER_ID=F.USER_ID AND Y.REVIEW_COUNT" + rev_count_value + rev_count + " AND F.NUMBER_OF_FRIENDS" + num_friends_value +num_friends + " AND Y.AVERAGE_STARS" + avg_stars_value + avg_stars+ " AND TO_DATE(Y.YELPING_SINCE, 'yyyy-mm')> TO_DATE('" + date+ "', 'yyyy-mm')";
        QueryGoesHere.setText(query);
        QueryGoesHere.setLineWrap(true);
        return stmt.executeQuery(query);
    }
    
    private ResultSet searchAnyUsers(Connection con) throws SQLException {
        int rev_count=Integer.parseInt(txtReviewCountValue.getText());
        String rev_count_value=jComboBox1.getSelectedItem().toString();
        int num_friends=Integer.parseInt(txtNumOfFriendsValue.getText());
        String num_friends_value=jComboBox2.getSelectedItem().toString();
        int avg_stars=Integer.parseInt(txtAvgStarsValue.getText());
        String avg_stars_value=jComboBox3.getSelectedItem().toString();
        
        int month=Integer.parseInt(txtMemberSinceMonth.getText());
        int year=Integer.parseInt(txtMemberSinceYear.getText());
        String date=year+"-"+month;
        
        Statement stmt = con.createStatement();
        String query = "SELECT FIRSTNAME AS NAME, Y.USER_ID, YELPING_SINCE , REVIEW_COUNT, FANS, AVERAGE_STARS, NUMBER_OF_FRIENDS FROM YELPUSER Y, YELP_USER_FRIENDS F WHERE Y.USER_ID=F.USER_ID AND (Y.REVIEW_COUNT" + rev_count_value + rev_count + " OR F.NUMBER_OF_FRIENDS" + num_friends_value +num_friends + " OR Y.AVERAGE_STARS" + avg_stars_value + avg_stars + " OR TO_DATE(Y.YELPING_SINCE, 'yyyy-mm')>TO_DATE('" + date+ "', 'yyyy-mm'))";
        QueryGoesHere.setText(query);
        QueryGoesHere.setLineWrap(true);
        return stmt.executeQuery(query);
    }
    
    private ResultSet searchBusiness(Connection con,String categories,String subcategories) throws SQLException {
        //INPUTS FROM REVIEW
        String from_month=txtReviewFromMonth.getText();
        String from_day=txtReviewFromDay.getText();
        String from_year=txtReviewFromYear.getText();
        String from_date=from_year+"-"+from_month+"-"+from_day;
        
        String to_month=txtReviewToMonth.getText();
        String to_day=txtReviewToDay.getText();
        String to_year=txtReviewToYear.getText();
        String to_date=to_year+"-"+to_month+"-"+to_day;
        
        String stars_value=jComboBox8.getSelectedItem().toString();
        int star=Integer.parseInt(txtReviewStar.getText());
        
        String votes_value=jComboBox8.getSelectedItem().toString();
        int votes=Integer.parseInt(jTextField1.getText());
        
        //INPUTS FROM CHECKIN
        int fromday=jComboBox5.getSelectedIndex();
        fromday=fromday-1;
        int fromhour=Integer.parseInt(txtFromHour.getText());
        
        int today=jComboBox6.getSelectedIndex();
        today=today-1;
        int tohour=Integer.parseInt(txtToHour.getText());
        
        String checkin=jComboBox7.getSelectedItem().toString();
        int checkin_value=Integer.parseInt(txtNumOfCheckins.getText());
        
        //INPUTS FROM CATEGORY/SUBCATEGORY
        //hardcoded for now
        
        //QUERY        
        Statement stmt = con.createStatement();
        String ReviewAndCategory = "SELECT B.BUSINESS_ID FROM BUSINESS B, REVIEW R, BUSINESS_CATEGORIES BC WHERE B.BUSINESS_ID=R.BUSINESS_ID AND R.BUSINESS_ID=BC.BUSINESS_ID AND BC.CATEGORIES=ANY(" + categories + ") AND BC.SUBCATEGORIES=ANY(" + subcategories + ") AND R.STARS" + stars_value + star + " AND R.TOTAL_VOTES" + votes_value + votes + " AND TO_DATE(R.REVIEW_DATE,'yyyy-mm-dd')>=TO_DATE('"+ from_date + "','yyyy-mm-dd') AND TO_DATE(R.REVIEW_DATE,'yyyy-mm-dd')<=TO_DATE('"+ to_date +"','yyyy-mm-dd')";
        String query = "SELECT BUSINESS_NAME AS NAME, BUSINESS_ID, FULL_ADDRESS AS ADDRESS, BUSINESS_CITY AS CITY, BUSINESS_STATE AS STATE, REVIEW_COUNT, STARS FROM BUSINESS B WHERE BUSINESS_ID IN ((SELECT BUSINESS_ID FROM ((SELECT * FROM CHECK_IN WHERE DAYOF>" + fromday + " AND DAYOF<" + today + ") UNION (SELECT * FROM CHECK_IN WHERE DAYOF=" + fromday + " AND FROMHOUR>=" + fromhour + ") UNION (SELECT * FROM CHECK_IN WHERE DAYOF=" + today + " AND FROMHOUR<=" + tohour + ")) GROUP BY BUSINESS_ID HAVING SUM(CHECKINCOUNT)" + checkin + checkin_value + ") UNION (" + ReviewAndCategory + "))";
        QueryGoesHere.setText(query);
        QueryGoesHere.setLineWrap(true);
        return stmt.executeQuery(query);
    }

    public static DefaultTableModel buildTableModel(ResultSet result) throws SQLException {
        ResultSetMetaData meta = result.getMetaData();
        int columns = meta.getColumnCount();
        DefaultTableModel dtm = new DefaultTableModel();
        Vector columns_name = new Vector();
        Vector data_rows = new Vector();

        for (int i = 1; i < columns; ++i) {
            columns_name.addElement(meta.getColumnName(i));
        }
        dtm.setColumnIdentifiers(columns_name);
        while (result.next()) {
            data_rows = new Vector();
            for (int j = 1; j < columns; ++j) {
                data_rows.addElement(result.getString(j));
            }
            dtm.addRow(data_rows);
        }
        return dtm;
    }

    private Connection openConnection() throws SQLException, ClassNotFoundException {
        // Load the Oracle database driver 
        DriverManager.registerDriver(new oracle.jdbc.OracleDriver());

        /* 
         Here is the information needed when connecting to a database 
         server. These values are now hard-coded in the program. In 
         general, they should be stored in some configuration file and 
         read at run time. 
         */
        String host = "localhost";
        String port = "1521";
        String dbName = "oracledb";
        String userName = "system";
        String password = "blank";

        // Construct the JDBC URL 
        String dbURL = "jdbc:oracle:thin:@" + host + ":" + port + ":" + dbName;
        return DriverManager.getConnection(dbURL, userName, password);
    }

    private void closeConnection(Connection con) {
        try {
            con.close();
        } catch (SQLException e) {
            System.err.println("Cannot close connection: " + e.getMessage());
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(hw3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(hw3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(hw3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(hw3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new hw3().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Business;
    private javax.swing.JPanel CheckIn;
    private javax.swing.JPanel QueryExecuted;
    private javax.swing.JTextArea QueryGoesHere;
    private javax.swing.JTable ResultTable;
    private javax.swing.JPanel Review;
    private javax.swing.ButtonGroup UserOrBusiness;
    private javax.swing.JPanel Users;
    private javax.swing.JButton btnExecute;
    private javax.swing.JToggleButton jBtnCategory;
    private javax.swing.JCheckBox jCheckBox13;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JComboBox jComboBox6;
    private javax.swing.JComboBox jComboBox7;
    private javax.swing.JComboBox jComboBox8;
    private javax.swing.JComboBox jComboBox9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel label;
    private javax.swing.JRadioButton radiobtnBusiness;
    private javax.swing.JRadioButton radiobtnUser;
    private javax.swing.JTextField txtAvgStarsValue;
    private javax.swing.JTextField txtFromHour;
    private javax.swing.JTextField txtMemberSinceMonth;
    private javax.swing.JTextField txtMemberSinceYear;
    private javax.swing.JTextField txtNumOfCheckins;
    private javax.swing.JTextField txtNumOfFriendsValue;
    private javax.swing.JTextField txtReviewCountValue;
    private javax.swing.JTextField txtReviewFromDay;
    private javax.swing.JTextField txtReviewFromMonth;
    private javax.swing.JTextField txtReviewFromYear;
    private javax.swing.JTextField txtReviewStar;
    private javax.swing.JTextField txtReviewToDay;
    private javax.swing.JTextField txtReviewToMonth;
    private javax.swing.JTextField txtReviewToYear;
    private javax.swing.JTextField txtToHour;
    // End of variables declaration//GEN-END:variables
   
}
